#ifndef PMK_VIEW_H
#define PMK_VIEW_H

/**
 * @brief Структура ячейки поля для отображения в консоль.
 */
typedef struct pmk_view_cell {
    int ncolor; /**< целочисленный номер цвета */
    char glyph; /**< символ отображения в консоли */
} pmk_view_cell_t;

/**
 * @brief Структура прямоугольного поля с ячейками для отображения в консоль. 
 */
typedef struct pmk_view_field {
    unsigned row_size, col_size; /**< число рядов и число столбцов в сетке ячеек */
    pmk_view_cell_t **cells;     /**< указатель на индексный массив ячеек, использование .cells[row_idx][col_idx] */
} pmk_view_field_t;

/**
 * @brief Функция создания нового прямоугольного поля для отображения. 
 * Функция смостоятельно выделяет память под все ячейки в количестве row_size * col_size
 * и под индексный массив для удобства работы с ячейками.
 *
 * @param row_size  положительное целое число - количество рядов
 * @param col_size  положительное целое число - количество столбцов
 * @param errcode   указатель на целоече число, в которое будет записан код результата: 0 - успешно, 1 - ошибка выделения памяти
 * @return pmk_view_field_t структура будет возвращена в любом случае, даже если память не будет успешно выделена, при провале число рядов и столбцов зануляется, указатель на память ячеек инициализируется NULL
 * @warning поведение функции не определено, если row_size или col_size нулевые 
 */
pmk_view_field_t pmk_make_view_field(unsigned row_size, unsigned col_size, int *errcode);

/**
 * @brief Функция освобождает память под поле для отображения.
 * Функция освобождает память, выделенную под ячейки функцией pmk_make_view_field
 * и записывает в структуру значения {0u, 0u, NULL}.
 * @param field указатель на структуру pmk_view_field_t
 */
void pmk_delete_view_field(pmk_view_field_t *field);

/**
 * @brief Функция печатает на экран ячейки.
 * Функция вызывает printw из ncurses для вывода содержимого ячеек.
 * Каждая ячейка печатается со совим знаком и своим цветом.
 * Между двумя ячейками в строке печатается один пробел. Пробел 
 * печатается с цветом @param inter_ncolor.
 * Функция НЕ вызывает refresh().
 * Если в функцию передана структура с нулевыми размерами,
 *     field.row_size == 0 && field.col_size == 0,
 * то функция ничего не выведет в консоль, к массиву ячеек не будет
 * обращений.
 * 
 * @param field структура поля для отображения в консоль
 * @param inter_ncolor цвет промежуточного пробела между ячейкам
 */
void pmk_print_view_field(pmk_view_field_t field, int inter_ncolor);
#endif